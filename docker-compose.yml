version: "3.9"

volumes:
  customer-service-db:
    name: customer-service-db-volume
  orders-db-1:
    name: orders-db-volume-1
  orders-db-2:
    name: orders-db-volume-2
services:

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_SERVER_ID: '1'
      ZOOKEEPER_CLIENT_PORT: '2181'
      ZOOKEEPER_SERVERS: 'zookeeper:2888:3888'
      ZOOKEEPER_PEER_PORT: '2888'
      ZOOKEEPER_LEADER_PORT: '3888'
      ZOOKEEPER_INIT_LIMIT: '10'
      ZOOKEEPER_SYNC_LIMIT: '5'
      ZOOKEEPER_MAX_CLIENT_CONNS: '5'


  service-discovery:
    image: gitlab-registry.ozon.dev/cs/classroom-10/students/practice/service-discovery:latest
    depends_on:
      - zookeeper
    container_name: service-discovery
    ports:
      - "6081:80"
    environment:
      - ROUTE256_DB_STATE=cluster:0-9:db1:1543;cluster-orders:0-3:localhost:5401;cluster-orders:4-7:localhost:5402
      - ROUTE256_UPDATE_TIMEOUT=10

  broker-1:
    image: confluentinc/cp-kafka:7.3.2
    container_name: broker-1
    depends_on:
      - zookeeper
      - service-discovery
    ports:
      - "29091:29091"
    environment:
      KAFKA_BROKER_ID: '1'
      KAFKA_BROKER_RACK: '1'
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENERS: 'LISTENER_INTERNAL://:9091,LISTENER_LOCAL://:29091'
      KAFKA_ADVERTISED_LISTENERS: 'LISTENER_INTERNAL://broker-1:9091,LISTENER_LOCAL://localhost:29091'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'LISTENER_INTERNAL'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'LISTENER_INTERNAL:PLAINTEXT,LISTENER_LOCAL:PLAINTEXT'
      KAFKA_DEFAULT_REPLICATION_FACTOR: '2'
      KAFKA_NUM_PARTITIONS: '2'

  broker-2:
    image: confluentinc/cp-kafka:7.3.2
    container_name: broker-2
    depends_on:
      - zookeeper
      - service-discovery
      - broker-1
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: '2'
      KAFKA_BROKER_RACK: '2'
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENERS: 'LISTENER_INTERNAL://:9091,LISTENER_LOCAL://:29092'
      KAFKA_ADVERTISED_LISTENERS: 'LISTENER_INTERNAL://broker-2:9091,LISTENER_LOCAL://localhost:29092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'LISTENER_INTERNAL'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'LISTENER_INTERNAL:PLAINTEXT,LISTENER_LOCAL:PLAINTEXT'
      KAFKA_DEFAULT_REPLICATION_FACTOR: '2'
      KAFKA_NUM_PARTITIONS: '2'

  broker-3:
    image: confluentinc/cp-kafka:7.3.2
    container_name: broker-3
    depends_on:
      - zookeeper
      - service-discovery
      - broker-1
      - broker-2 
    ports:
      - "29093:29093"
    environment:
      KAFKA_BROKER_ID: '3'
      KAFKA_BROKER_RACK: '3'
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENERS: 'LISTENER_INTERNAL://:9091,LISTENER_LOCAL://:29093'
      KAFKA_ADVERTISED_LISTENERS: 'LISTENER_INTERNAL://broker-3:9091,LISTENER_LOCAL://localhost:29093'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'LISTENER_INTERNAL'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'LISTENER_INTERNAL:PLAINTEXT,LISTENER_LOCAL:PLAINTEXT'
      KAFKA_DEFAULT_REPLICATION_FACTOR: '2'
      KAFKA_NUM_PARTITIONS: '2'

  customer-service-db:
    image: postgres:latest
    depends_on:
      - service-discovery
    container_name: customer-service-db
    environment:
      - POSTGRES_DB=customer-service
      - POSTGRES_USER=test
      - POSTGRES_PASSWORD=test
    ports:
      - "5400:5432"
    volumes:
      - customer-service-db:/var/lib/postgresql/data
 
  orders-db-1:
    image: postgres:latest
    depends_on:
      - service-discovery
    container_name: orders-db-1
    environment:
      - POSTGRES_DB=orders-db
      - POSTGRES_USER=test
      - POSTGRES_PASSWORD=test
    ports:
      - "5401:5432"
    volumes:
      - orders-db-1:/var/lib/postgresql/data
 
  orders-db-2:
    image: postgres:latest
    depends_on:
      - service-discovery
    container_name: orders-db-2
    environment:
      - POSTGRES_DB=orders-db
      - POSTGRES_USER=test
      - POSTGRES_PASSWORD=test
    ports:
      - "5402:5432"
    volumes:
      - orders-db-2:/var/lib/postgresql/data

  gateway-service:
    build: 
      context: ./src
      dockerfile: Dockerfile_gateway
    depends_on:
      - service-discovery
      - broker-1
      - broker-2
      - broker-3
    container_name: gateway-service
    ports:
      - "5071:80"
      - "5171:5005"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      "ROUTE256_CS_ADDRESS": "http://customer-service:5005"
      "ROUTE256_OS1_ADDRESS": "orders-service-1"
      "ROUTE256_OS1_PORT": "5005"
      "ROUTE256_OS2_ADDRESS": "orders-service-2"
      "ROUTE256_OS2_PORT": "5005"
      "ROUTE256_OS3_ADDRESS": "host.docker.internal"
      "ROUTE256_OS3_PORT": "5005"

  orders-redis:
    image: redis:latest
    container_name: orders-redis
    ports:
      - "6380:6379"

  orders-service-1:
    build: 
      context: ./src
      dockerfile: Dockerfile_orders
    depends_on:
      - service-discovery
      - broker-1
      - broker-2
      - broker-3
      - orders-db-1
      - orders-db-2
      - orders-redis 
    container_name: orders-service-1
    ports:
      - "5091:80"
      - "5191:5005"
    environment:
      "ROUTE256_SD_ADDRESS": "http://service-discovery:80"
      "ROUTE256_LS_ADDRESS": "http://logistic-simulator:5131"
      "ROUTE256_CS_ADDRESS": "http://customer-service:5005"
      "ROUTE256_GRPC_PORT": "5005"
      "ROUTE256_REDIS_ADDRESS": "orders-redis:6379"
      "ROUTE256_KAFKA_ADDRESS": "broker-1:9091"
 
  orders-service-2:
    build: 
      context: ./src
      dockerfile: Dockerfile_orders
    depends_on:
      - service-discovery
      - broker-1
      - broker-2
      - broker-3
      - orders-db-1
      - orders-db-2
      - orders-redis
    container_name: orders-service-2
    ports:
      - "5092:80"
      - "5192:5005"
    environment:
      "ROUTE256_SD_ADDRESS": "http://service-discovery:80"
      "ROUTE256_LS_ADDRESS": "http://logistic-simulator:5131"
      "ROUTE256_CS_ADDRESS": "http://customer-service:5005"
      "ROUTE256_GRPC_PORT": "5005"
      "ROUTE256_REDIS_ADDRESS": "orders-redis:6379"
      "ROUTE256_KAFKA_ADDRESS": "broker-1:9091"
    
  customer-service:
    image: gitlab-registry.ozon.dev/cs/classroom-10/students/practice/customer-service:latest
    depends_on:
      - service-discovery
      - broker-1
      - broker-2
      - broker-3
      - customer-service-db
    container_name: customer-service
    ports:
      - "5081:80"
      - "5181:5005"
    environment:
      "ROUTE256_SD_ADDRESS": "http://service-discovery:80"
      "ROUTE256_GRPC_PORT": "5005"
     
  orders-generator-web:
    image: gitlab-registry.ozon.dev/cs/classroom-10/students/practice/orders-generator:latest
    depends_on:
      - service-discovery
      - broker-1
      - broker-2
      - broker-3
    container_name: orders-generator-web
    environment:
      - ROUTE256_ORDER_SOURCE=WebSite
      - ROUTE256_ORDER_REQUEST_TOPIC=pre_orders
      - ROUTE256_KAFKA_BROKERS=broker-1:9091
        
  orders-generator-mobile:
    image: gitlab-registry.ozon.dev/cs/classroom-10/students/practice/orders-generator:latest
    depends_on:
      - service-discovery
      - broker-1
      - broker-2
      - broker-3
    container_name: orders-generator-mobile
    environment:
      - ROUTE256_ORDER_SOURCE=Mobile
      - ROUTE256_ORDER_REQUEST_TOPIC=pre_orders
      - ROUTE256_KAFKA_BROKERS=broker-1:9091  
  
  orders-generator-api:
    image: gitlab-registry.ozon.dev/cs/classroom-10/students/practice/orders-generator:latest
    depends_on:
      - service-discovery
      - broker-1
      - broker-2
      - broker-3
    container_name: orders-generator-api
    environment:
      - ROUTE256_ORDER_SOURCE=Api
      - ROUTE256_ORDER_REQUEST_TOPIC=pre_orders
      - ROUTE256_KAFKA_BROKERS=broker-1:9091

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
                
  logistic-simulator:
    image: gitlab-registry.ozon.dev/cs/classroom-10/students/practice/logistics-simulator:latest
    depends_on:
      - service-discovery
      - broker-1
      - broker-2
      - broker-3
      - redis
    container_name: logistic-simulator
    ports:
      - "5131:80"


